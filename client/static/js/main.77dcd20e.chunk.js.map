{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/HomeComponent.js","components/MenuComponent.js","components/ContactComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/CommentFormComponent.js","components/DishDetailComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","react_default","a","createElement","className","baseUrl","RenderCard","_ref","item","isLoading","errMes","LoadingComponent_Loading","react_animation_components","in","transformProps","exitTransform","Card","CardImg","src","image","alt","name","CardBody","CardTitle","designation","CardSubtitle","CardText","description","Home","props","dish","dishesLoading","dishesErrMes","promotion","promosLoading","promosErrMes","leader","leadersLoading","leadersErrMes","RenderMenuItem","react_router_dom","to","concat","id","width","CardImgOverlay","Menu","menu","dishes","map","key","errmes","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","minLength","isNumber","isNaN","Number","validEmail","test","Contact","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","bind","assertThisInitialized","values","alert","JSON","stringify","postFeedback","firstname","lastname","telnum","email","agree","contactType","message","resetFeedbackForm","_this2","href","role","lib","model","onSubmit","Row","Col","md","Label","htmlFor","text","placeholder","validators","show","messages","size","offset","check","checkbox","select","textarea","rows","Button","type","color","Component","Header","state","isNavOpen","isModalOpen","toggleNav","toggleModal","handleLogin","handleLogout","setState","event","loginUser","username","value","password","preventDefault","logoutUser","Fragment","Navbar","dark","expand","NavbarToggler","onClick","NavbarBrand","height","Collapse","isOpen","navbar","Nav","NavItem","isAuthenticated","auth","user","outline","isFetching","Jumbotron","Modal","toggle","ModalHeader","ModalBody","Form","FormGroup","Input","innerRef","input","remember","Footer","CommentForm","postComment","dishId","rating","author","comment","handleCommentSubmit","xs","RenderDish","RenderComments","_ref2","comments","Intl","DateTimeFormat","year","month","day","format","Date","date","CommentFormComponent","DishDetail","RenderLeaders","leaders","Media","list","top","object","body","heading","About","CardHeader","title","addComment","payload","dishesFailed","addDishes","commentsFailed","addComments","promosFailed","addPromos","promos","addLeaders","leadersFailed","addFeedback","feedback","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","HeaderComponent","react_transition_group","location","classNames","timeout","react_router","path","component","HomeComponent","filter","featured","promotions","promoErrMes","exact","MenuComponent","match","DishDetailComponent","parseInt","params","commentsErrMes","ContactComponent","AboutComponent","FooterComponent","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","Content-Type","credentials","then","response","ok","error","Error","status","statusText","json","catch","console","log","newFeedback","actions","reset","Dishes","arguments","undefined","action","objectSpread","Comments","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","es","MainComponent","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2SAEaA,EAAU,WACnB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oDAChBH,EAAAC,EAAAC,cAAA,yBCLCE,EAAU,iCCOvB,SAASC,EAATC,GAAiD,IAA3BC,EAA2BD,EAA3BC,KAAMC,EAAqBF,EAArBE,UAAWC,EAAUH,EAAVG,OACnC,OAAID,EACOR,EAAAC,EAAAC,cAACQ,EAAD,MACAD,EACAT,EAAAC,EAAAC,cAAA,UAAKO,GAGRT,EAAAC,EAAAC,cAACS,EAAA,cAAD,CAAeC,IAAE,EAACC,eAAgB,CAAEC,cAAe,gCAC/Cd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,IAAKb,EAAUG,EAAKW,MAAOC,IAAKZ,EAAKa,OAC9CpB,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KAAYf,EAAKa,MAGhBb,EAAKgB,YAAcvB,EAAAC,EAAAC,cAACsB,EAAA,EAAD,KAAejB,EAAKgB,aAA8B,KACtEvB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KAAWlB,EAAKmB,gBA0BzBC,MAlBf,SAAcC,GACV,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACG,EAAD,CAAYE,KAAMqB,EAAMC,KAAMrB,UAAWoB,EAAME,cAAerB,OAAQmB,EAAMG,gBAEhF/B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACG,EAAD,CAAYE,KAAMqB,EAAMI,UAAWxB,UAAWoB,EAAMK,cAAexB,OAAQmB,EAAMM,gBAErFlC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACXH,EAAAC,EAAAC,cAACG,EAAD,CAAYE,KAAMqB,EAAMO,OAAQ3B,UAAWoB,EAAMQ,eAAgB3B,OAAQmB,EAAMS,sDChCnG,SAASC,EAAThC,GAAkC,IAARuB,EAAQvB,EAARuB,KACtB,OAEI7B,EAAAC,EAAAC,cAACa,EAAA,EAAD,KAEIf,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAE,SAAAC,OAAWZ,EAAKa,KACpB1C,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAAS2B,MAAM,OAAO1B,IAAKb,EAAUyB,EAAKX,MAAOC,IAAKU,EAAKH,cAC3D1B,EAAAC,EAAAC,cAAC0C,EAAA,EAAD,KACI5C,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KAAYO,EAAKT,SASrC,IAmDeyB,EAnDF,SAACjB,GAEV,IAAMkB,EAAOlB,EAAMmB,OAAOA,OAAOC,IAAI,SAACnB,GAClC,OAEI7B,EAAAC,EAAAC,cAAA,OAAK+C,IAAKpB,EAAKa,GAAIvC,UAAU,uBAEzBH,EAAAC,EAAAC,cAACoC,EAAD,CAAgBT,KAAMA,OAKlC,OAAID,EAAMmB,OAAOvC,UAETR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACQ,EAAD,QAILkB,EAAMmB,OAAOG,OAEhBlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAK0B,EAAMmB,OAAOG,UAM1BlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACInD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACIpD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEJxC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEJrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAO2C,wDC9DhCQ,EAAW,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAE/BC,EAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAUA,GAAOA,EAAIC,QAAUE,IACpDC,EAAY,SAACD,GAAD,OAAS,SAACH,GAAD,OAASA,GAAOA,EAAIC,QAAUE,IACnDE,EAAW,SAACL,GAAD,OAAUM,MAAMC,OAAOP,KAElCQ,EAAa,SAACR,GAAD,MAAS,4CAA4CS,KAAKT,IAuO9DU,cApOX,SAAAA,EAAYrC,GAAO,IAAAsC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACfC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAMzC,KAED6C,aAAeP,EAAKO,aAAaC,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IAHLA,4EAMNU,GACTC,MAAM,qBAAuBC,KAAKC,UAAUH,IAC5CP,KAAKzC,MAAMoD,aAAaJ,EAAOK,UAAWL,EAAOM,SAAUN,EAAOO,OAAQP,EAAOQ,MAAOR,EAAOS,MAAOT,EAAOU,YAAaV,EAAOW,SACjIlB,KAAKzC,MAAM4D,qDAGN,IAAAC,EAAApB,KACL,OACIrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACInD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACIpD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEJxC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAgBC,QAAM,GAAtB,eAEJrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,wBACAF,EAAAC,EAAAC,cAAA,aAIRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,mCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,2CAEIF,EAAAC,EAAAC,cAAA,WAFJ,2BAIIF,EAAAC,EAAAC,cAAA,WAJJ,YAMIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAPjB,mBAQIH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,cATjB,mBAUIH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAXjB,KAWsCH,EAAAC,EAAAC,cAAA,KAAGwF,KAAK,6BAAR,wBAG1C1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,+BACXH,EAAAC,EAAAC,cAAA,kCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYwF,KAAK,SAC5B3F,EAAAC,EAAAC,cAAA,KAAGyF,KAAK,SAASxF,UAAU,kBAAkBuF,KAAK,oBAC9C1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADjB,SAIAH,EAAAC,EAAAC,cAAA,KAAGyF,KAAK,SAASxF,UAAU,gBACvBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBADjB,UAGAH,EAAAC,EAAAC,cAAA,KAAGyF,KAAK,SAASxF,UAAU,kBAAkBuF,KAAK,6BAC9C1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBADjB,aAMZH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,oCAEJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEXH,EAAAC,EAAAC,cAAC0F,EAAA,KAAD,CAAMC,MAAM,WAAWC,SAAU,SAAClB,GAAD,OAAYa,EAAKhB,aAAaG,KAC3D5E,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,GACLjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,aAAf,eAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,IACLjG,EAAAC,EAAAC,cAAC0F,EAAA,QAAQQ,KAAT,CACIP,MAAM,aACNnD,GAAG,YACHtB,KAAK,YACLiF,YAAY,aACZlG,UAAU,eACVmG,WAAY,CACRhD,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAG7BzD,EAAAC,EAAAC,cAAC0F,EAAA,OAAD,CACIzF,UAAU,cACV0F,MAAM,aACNU,KAAK,UACLC,SAAU,CACNlD,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3BzD,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,GACLjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,YAAf,cAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,IACLjG,EAAAC,EAAAC,cAAC0F,EAAA,QAAQQ,KAAT,CACIP,MAAM,YACNnD,GAAG,WACHtB,KAAK,WACLiF,YAAY,YACZlG,UAAU,eACVmG,WAAY,CACRhD,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,OAG7BzD,EAAAC,EAAAC,cAAC0F,EAAA,OAAD,CACIzF,UAAU,cACV0F,MAAM,YACNU,KAAK,UACLC,SAAU,CACNlD,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3BzD,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,GACLjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,UAAf,iBAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,IACLjG,EAAAC,EAAAC,cAAC0F,EAAA,QAAQQ,KAAT,CACIP,MAAM,UACNnD,GAAG,SACHtB,KAAK,SACLiF,YAAY,eACZlG,UAAU,eACVmG,WAAY,CACRhD,WACAK,UAAWA,EAAU,GACrBF,UAAWA,EAAU,IACrBG,cAGR5D,EAAAC,EAAAC,cAAC0F,EAAA,OAAD,CACIzF,UAAU,cACV0F,MAAM,UACNU,KAAK,UACLC,SAAU,CACNlD,SAAU,WACVK,UAAW,iCACXF,UAAW,6BACXG,SAAU,wBAK1B5D,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,GACLjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,SAAf,UAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,IACLjG,EAAAC,EAAAC,cAAC0F,EAAA,QAAQQ,KAAT,CACIP,MAAM,SACNnD,GAAG,QACHtB,KAAK,QACLiF,YAAY,QACZlG,UAAU,eACVmG,WAAY,CACRhD,WACAS,gBAGR/D,EAAAC,EAAAC,cAAC0F,EAAA,OAAD,CACIzF,UAAU,cACV0F,MAAM,SACNU,KAAK,UACLC,SAAU,CACNlD,SAAU,WACVS,WAAY,6BAK5B/D,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,CAAEQ,KAAM,EAAGC,OAAQ,IACxB1G,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOS,OAAK,GACR3G,EAAAC,EAAAC,cAAC0F,EAAA,QAAQgB,SAAT,CAAkBf,MAAM,SAASzE,KAAK,QAAQjB,UAAU,qBAAsB,IAC9EH,EAAAC,EAAAC,cAAA,wCAIZF,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,CAAEQ,KAAM,EAAGC,OAAQ,IACxB1G,EAAAC,EAAAC,cAAC0F,EAAA,QAAQiB,OAAT,CAAgBhB,MAAM,eAAezE,KAAK,cAAcjB,UAAU,gBAC9DH,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,0BAIZF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,GACLjG,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,WAAf,kBAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,IACLjG,EAAAC,EAAAC,cAAC0F,EAAA,QAAQkB,SAAT,CAAkBjB,MAAM,WAAWnD,GAAG,UAAUtB,KAAK,UAAU2F,KAAK,KAAK5G,UAAU,mBAG3FH,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKC,GAAI,CAAEQ,KAAM,GAAIC,OAAQ,IACzB1G,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,WAA5B,8BAxNdC,kICkJPC,eA7IX,SAAAA,EAAYxF,GAAO,IAAAsC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA+C,IAEflD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAiD,GAAA5C,KAAAH,KAAMzC,KAIDyF,MAAQ,CACTC,WAAW,EACXC,aAAa,GAIjBrD,EAAKsD,UAAYtD,EAAKsD,UAAU9C,KAAfP,OAAAQ,EAAA,EAAAR,CAAAD,IACjBA,EAAKuD,YAAcvD,EAAKuD,YAAY/C,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAKwD,YAAcxD,EAAKwD,YAAYhD,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IACnBA,EAAKyD,aAAezD,EAAKyD,aAAajD,KAAlBP,OAAAQ,EAAA,EAAAR,CAAAD,IAfLA,2EAoBfG,KAAKuD,SAAS,CACVN,WAAYjD,KAAKgD,MAAMC,kDAK3BjD,KAAKuD,SAAS,CACVL,aAAclD,KAAKgD,MAAME,kDAKrBM,GAERxD,KAAKoD,cACLpD,KAAKzC,MAAMkG,UAAU,CAAEC,SAAU1D,KAAK0D,SAASC,MAAOC,SAAU5D,KAAK4D,SAASD,QAC9EH,EAAMK,wDAIN7D,KAAKzC,MAAMuG,8CAGN,IAAA1C,EAAApB,KACL,OAEIrE,EAAAC,EAAAC,cAACF,EAAAC,EAAMmI,SAAP,KACIpI,EAAAC,EAAAC,cAACmI,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAChBvI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAACsI,EAAA,EAAD,CAAeC,QAASpE,KAAKmD,YAC7BxH,EAAAC,EAAAC,cAACwI,EAAA,EAAD,CAAavI,UAAU,UAAUuF,KAAK,KAClC1F,EAAAC,EAAAC,cAAA,OAAKe,IAAI,yBAAyB0H,OAAO,KAAKhG,MAAM,KAAKxB,IAAI,2BAEjEnB,EAAAC,EAAAC,cAAC0I,EAAA,EAAD,CAAUC,OAAQxE,KAAKgD,MAAMC,UAAWwB,QAAM,GAC1C9I,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAKD,QAAM,GACP9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAASpC,UAAU,WAAWqC,GAAG,SAC7BxC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,WAIRH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAASpC,UAAU,WAAWqC,GAAG,SAC7BxC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,WAGRH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAASpC,UAAU,WAAWqC,GAAG,YAC7BxC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,oBAAhB,eAGRH,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACIhJ,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAASpC,UAAU,WAAWqC,GAAG,cAC7BxC,EAAAC,EAAAC,cAAA,QAAMC,UAAU,4BAAhB,kBAIZH,EAAAC,EAAAC,cAAC6I,EAAA,EAAD,CAAK5I,UAAU,UAAU2I,QAAM,GAC3B9I,EAAAC,EAAAC,cAAC8I,EAAA,EAAD,KACM3E,KAAKzC,MAAMqH,gBAMTjJ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAAoBkE,KAAKzC,MAAMsH,KAAKC,KAAKpB,UACxD/H,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAQoC,SAAO,EAACX,QAASpE,KAAKsD,cAC1B3H,EAAAC,EAAAC,cAAA,QAAMC,UAAU,wBAAhB,UACCkE,KAAKzC,MAAMsH,KAAKG,WAAarJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAoC,OAT1FH,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAQoC,SAAO,EAACX,QAASpE,KAAKoD,aAC1BzH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,uBAAhB,SACCkE,KAAKzC,MAAMsH,KAAKG,WAAarJ,EAAAC,EAAAC,cAAA,QAAMC,UAAU,iCAAoC,WAgB9GH,EAAAC,EAAAC,cAACoJ,EAAA,EAAD,KACItJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,kCACAF,EAAAC,EAAAC,cAAA,uKAQhBF,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAOV,OAAQxE,KAAKgD,MAAME,YAAaiC,OAAQnF,KAAKoD,aAChDzH,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAaD,OAAQnF,KAAKoD,aAA1B,SACAzH,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,KAEI1J,EAAAC,EAAAC,cAACyJ,EAAA,EAAD,CAAM7D,SAAUzB,KAAKqD,aACjB1H,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACI5J,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACAnG,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAO5C,KAAK,OAAOvE,GAAG,WAAWtB,KAAK,WAAW0I,SAAU,SAACC,GAAD,OAAYtE,EAAKsC,SAAWgC,MAE3F/J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,KACI5J,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACAnG,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAO5C,KAAK,WAAWvE,GAAG,WAAWtB,KAAK,WAAW0I,SAAU,SAACC,GAAD,OAAYtE,EAAKwC,SAAW8B,MAE/F/J,EAAAC,EAAAC,cAAC0J,EAAA,EAAD,CAAWjD,OAAK,GACZ3G,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOS,OAAK,GACR3G,EAAAC,EAAAC,cAAC2J,EAAA,EAAD,CAAO5C,KAAK,WAAW7F,KAAK,WAAW0I,SAAU,SAACC,GAAD,OAAYtE,EAAKuE,SAAWD,KADjF,gBAKJ/J,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAQC,KAAK,SAASe,MAAM,SAASd,MAAM,WAA3C,oBAnIPC,aC0DN8C,OA3Ef,SAAgBrI,GACZ,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,2BACXH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEJxC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,YAAT,aAEJxC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEJxC,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,cAAT,iBAIZxC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,2CAEIF,EAAAC,EAAAC,cAAA,WAFJ,2BAIIF,EAAAC,EAAAC,cAAA,WAJJ,YAMIF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAPjB,mBAQIH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBATjB,mBAUIH,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAXjB,IAW4C,IACxCH,EAAAC,EAAAC,cAAA,KAAGwF,KAAK,6BAAR,wBAGR1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qCACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACXH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAiCuF,KAAK,uBAC/C1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAEjBH,EAAAC,EAAAC,cAAA,KACIC,UAAU,mCACVuF,KAAK,2CAEL1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAEjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mCAAmCuF,KAAK,+BACjD1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,oBAEjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kCAAkCuF,KAAK,uBAChD1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iCAAiCuF,KAAK,uBAC/C1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAEjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,sBAAsBuF,KAAK,WACpC1F,EAAAC,EAAAC,cAAA,KAAGC,UAAU,yBAK7BH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,8BACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACXH,EAAAC,EAAAC,cAAA,2DCjElBuD,GAAY,SAACC,GAAD,OAAS,SAACH,GAAD,OAAUA,GAAOA,EAAIC,QAAUE,IAwG3CwG,eApGX,SAAAA,EAAYtI,GAAO,IAAAsC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAA6F,IACfhG,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAA+F,GAAA1F,KAAAH,KAAMzC,KAEDyF,MAAQ,CACTE,aAAa,GAGjBrD,EAAKuD,YAAcvD,EAAKuD,YAAY/C,KAAjBP,OAAAQ,EAAA,EAAAR,CAAAD,IAPJA,6EAafG,KAAKuD,SAAS,CACVL,aAAclD,KAAKgD,MAAME,0DAIb3C,GAChBP,KAAKoD,cACLpD,KAAKzC,MAAMuI,YAAY9F,KAAKzC,MAAMwI,OAAQxF,EAAOyF,OAAQzF,EAAO0F,OAAQ1F,EAAO2F,0CAG1E,IA1BM7G,EA0BN+B,EAAApB,KACL,OAEIrE,EAAAC,EAAAC,cAACF,EAAAC,EAAMmI,SAAP,KAEIpI,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAQoC,SAAO,EAACX,QAASpE,KAAKoD,YAAatH,UAAU,SACjDH,EAAAC,EAAAC,cAAA,QAAMC,UAAU,sBAAhB,mBAEJH,EAAAC,EAAAC,cAACqJ,EAAA,EAAD,CAAOV,OAAQxE,KAAKgD,MAAME,YAAaiC,OAAQnF,KAAKoD,aAChDzH,EAAAC,EAAAC,cAACuJ,EAAA,EAAD,CAAaD,OAAQnF,KAAKoD,aAA1B,kBACAzH,EAAAC,EAAAC,cAACwJ,EAAA,EAAD,KACI1J,EAAAC,EAAAC,cAAC0F,EAAA,UAAD,CAAWE,SAAU,SAAClB,GAAD,OAAYa,EAAK+E,oBAAoB5F,KACtD5E,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKyE,GAAI,IACLzK,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,UAAf,WAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKyE,GAAI,IACLzK,EAAAC,EAAAC,cAAC0F,EAAA,QAAQiB,OAAT,CAAgBhB,MAAM,UAAUzE,KAAK,SAASjB,UAAU,gBACpDH,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,mBACAF,EAAAC,EAAAC,cAAA,sBAIZF,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKyE,GAAI,IACLzK,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,UAAf,cAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKyE,GAAI,IACLzK,EAAAC,EAAAC,cAAC0F,EAAA,QAAQQ,KAAT,CACIP,MAAM,UACNnD,GAAG,SACHtB,KAAK,SACLiF,YAAY,YACZlG,UAAU,eACVmG,WAAY,CACR3C,WAhEzBD,EAgE8C,EAhEtC,SAACH,GAAD,OAASA,GAAOA,EAAIC,QAAUE,IAiEbD,UAAWA,GAAU,OAG7BzD,EAAAC,EAAAC,cAAC0F,EAAA,OAAD,CACIzF,UAAU,cACV0F,MAAM,QACNU,KAAK,UACLC,SAAU,CACNlD,SAAU,WACVK,UAAW,oCACXF,UAAW,qCAK3BzD,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKyE,GAAI,IACLzK,EAAAC,EAAAC,cAACgG,EAAA,EAAD,CAAOC,QAAQ,QAAf,YAEJnG,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKyE,GAAI,IACLzK,EAAAC,EAAAC,cAAC0F,EAAA,QAAQkB,SAAT,CAAkBjB,MAAM,WAAWnD,GAAG,UAAUtB,KAAK,UAAU2F,KAAK,IAAI5G,UAAU,mBAG1FH,EAAAC,EAAAC,cAAC6F,EAAA,EAAD,CAAK5F,UAAU,cACXH,EAAAC,EAAAC,cAAC8F,EAAA,EAAD,CAAKyE,GAAI,IACLzK,EAAAC,EAAAC,cAAC8G,EAAA,EAAD,CAAQC,KAAK,SAASC,MAAM,WAA5B,uBAxFVC,aCG1B,SAASuD,GAATpK,GAA8B,IAARuB,EAAQvB,EAARuB,KAClB,OACI7B,EAAAC,EAAAC,cAAA,OAAK+C,IAAKpB,EAAKa,GAAIvC,UAAU,uBACzBH,EAAAC,EAAAC,cAACS,EAAA,cAAD,CAAeC,IAAE,EAACC,eAAgB,CAAEC,cAAe,gCAC/Cd,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACc,EAAA,EAAD,CAASC,IAAKb,EAAUyB,EAAKX,MAAOC,IAAKU,EAAKT,KAAMuB,MAAM,SAC1D3C,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAACoB,EAAA,EAAD,KAAYO,EAAKT,MACjBpB,EAAAC,EAAAC,cAACuB,EAAA,EAAD,KAAWI,EAAKH,iBAQxC,SAASiJ,GAATC,GAA2D,IAAjCC,EAAiCD,EAAjCC,SAAUV,EAAuBS,EAAvBT,YAAaC,EAAUQ,EAAVR,OAC7C,OAAIS,EAEI7K,EAAAC,EAAAC,cAAA,OAAKC,UAAU,uBACXH,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMZ,UAAU,OACZH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACVH,EAAAC,EAAAC,cAACS,EAAA,QAAD,CAASC,IAAE,GACNiK,EAAS7H,IAAI,SAACuH,GACX,OACIvK,EAAAC,EAAAC,cAACS,EAAA,KAAD,CAAMC,IAAE,EAACqC,IAAKsH,EAAQ7H,IAClB1C,EAAAC,EAAAC,cAAA,UAAKqK,EAAQA,SACbvK,EAAAC,EAAAC,cAAA,gBACQqK,EAAQD,OADhB,SAEK,IAAIQ,KAAKC,eAAe,QAAS,CAC9BC,KAAM,UACNC,MAAO,OACPC,IAAK,YACNC,OAAO,IAAIC,KAAKb,EAAQc,aAOnDrL,EAAAC,EAAAC,cAACoL,GAAD,CAAalB,OAAQA,EAAQD,YAAaA,MAK/CnK,EAAAC,EAAAC,cAAA,YAIf,IAiDeqL,GAjDI,SAAC3J,GAChB,OAAIA,EAAMpB,UAEFR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACQ,EAAD,QAILkB,EAAMnB,OAETT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAAA,UAAK0B,EAAMnB,QADf,MAORmB,EAAMC,KAEF7B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACInD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACIpD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEJxC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACIpD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEJxC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAgBC,QAAM,GAAEzB,EAAMC,KAAKT,OAEvCpB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAK0B,EAAMC,KAAKT,MAChBpB,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACwK,GAAD,CAAY7I,KAAMD,EAAMC,OACxB7B,EAAAC,EAAAC,cAACyK,GAAD,CAAgBE,SAAUjJ,EAAMiJ,SAAUV,YAAavI,EAAMuI,YAAaC,OAAQxI,EAAMC,KAAKa,OAMlG1C,EAAAC,EAAAC,cAAA,iCCnGf,SAASsL,GAATlL,GAAoC,IAAXmL,EAAWnL,EAAXmL,QACrB,OAAIA,EAAQjL,UAEJR,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACQ,EAAD,OAGD+K,EAAQvI,OAEXlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,UAAKuL,EAAQvI,SAKjBlD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACXH,EAAAC,EAAAC,cAACwL,GAAA,EAAD,CAAOC,MAAI,GACP3L,EAAAC,EAAAC,cAACS,EAAA,QAAD,CAASC,IAAE,GACN6K,EAAQA,QAAQzI,IAAI,SAACb,GAClB,OACInC,EAAAC,EAAAC,cAACS,EAAA,KAAD,CAAMC,IAAE,EAACqC,IAAKd,EAAOO,IACjB1C,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACwL,GAAA,EAAD,CAAOE,KAAG,EAACzL,UAAU,cACjBH,EAAAC,EAAAC,cAACwL,GAAA,EAAD,CAAOG,QAAM,EAAC5K,IAAKb,EAAU+B,EAAOjB,MAAOC,IAAKgB,EAAOf,QAE3DpB,EAAAC,EAAAC,cAACwL,GAAA,EAAD,CAAOI,MAAI,EAAC3L,UAAU,UAClBH,EAAAC,EAAAC,cAACwL,GAAA,EAAD,CAAOK,SAAO,GAAE5J,EAAOf,MACvBpB,EAAAC,EAAAC,cAAA,SAAIiC,EAAOZ,aACXvB,EAAAC,EAAAC,cAAA,SAAIiC,EAAOT,qBAmFxCsK,OAtEf,SAAepK,GACX,OACI5B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACXH,EAAAC,EAAAC,cAACiD,EAAA,EAAD,KACInD,EAAAC,EAAAC,cAACkD,EAAA,EAAD,KACIpD,EAAAC,EAAAC,cAACqC,EAAA,EAAD,CAAMC,GAAG,SAAT,SAEJxC,EAAAC,EAAAC,cAACkD,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJrD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,aAGRF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,qZAMAF,EAAAC,EAAAC,cAAA,2DACmDF,EAAAC,EAAAC,cAAA,4BADnD,iIAKJF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAAC+L,GAAA,EAAD,CAAY9L,UAAU,yBAAtB,qBACAH,EAAAC,EAAAC,cAACmB,EAAA,EAAD,KACIrB,EAAAC,EAAAC,cAAA,MAAIC,UAAU,WACVH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,WACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,eACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,sBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,sBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,wBACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,cACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,aACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,UAKhBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAACa,EAAA,EAAD,KACIf,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAUlB,UAAU,YAChBH,EAAAC,EAAAC,cAAA,cAAYC,UAAU,cAClBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,QAAb,qFACAH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,qBAAlB,cAEIH,EAAAC,EAAAC,cAAA,QAAMgM,MAAM,gBAAZ,0EAOxBlM,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACXH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACXH,EAAAC,EAAAC,cAAA,mCAEJF,EAAAC,EAAAC,cAACsL,GAAD,CAAeC,QAAS7J,EAAM6J,mDChEjCU,GAAa,SAAC5B,GAAD,MAAc,CACpCtD,KChDuB,cDkDvBmF,QAAS7B,IAsCAzI,GAAgB,WAEzB,MAAO,CACHmF,KC1FsB,mBD8FjBoF,GAAe,SAACnJ,GACzB,MAAO,CACH+D,KC/FqB,gBDgGrBmF,QAASlJ,IAIJoJ,GAAY,SAACvJ,GACtB,MAAO,CACHkE,KCrGkB,aDsGlBmF,QAASrJ,IAkCJwJ,GAAiB,SAACrJ,GAC3B,MAAO,CACH+D,KCxIuB,kBDyIvBmF,QAASlJ,IAIJsJ,GAAc,SAAC3B,GACxB,MAAO,CACH5D,KChJoB,eDiJpBmF,QAASvB,IAmCJ5I,GAAgB,iBAAO,CAChCgF,KCnL0B,mBDsLjBwF,GAAe,SAACvJ,GAAD,MAAa,CACrC+D,KCrLyB,gBDsLzBmF,QAASlJ,IAGAwJ,GAAY,SAACC,GAAD,MAAa,CAClC1F,KC3LsB,aD4LtBmF,QAASO,IA8BAvK,GAAiB,WAC1B,MAAO,CACH6E,KC1NuB,oBD8NlB2F,GAAa,SAACnB,GACvB,MAAO,CACHxE,KC/NmB,cDgOnBmF,QAASX,IAIJoB,GAAgB,SAAC3J,GAC1B,MAAO,CACH+D,KCrOsB,iBDsOtBmF,QAASlJ,IAkDJ4J,GAAc,SAACC,GACxB,MAAO,CACH9F,KCzRoB,eD0RpBmF,QAASW,aE/PXC,+LAGE3I,KAAKzC,MAAMqL,cACX5I,KAAKzC,MAAMsL,gBACX7I,KAAKzC,MAAMuL,cACX9I,KAAKzC,MAAMwL,gDAIN,IAAAlJ,EAAAG,KAkCL,OACIrE,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACmN,GAAD,MAEArN,EAAAC,EAAAC,cAACoN,GAAA,gBAAD,KACItN,EAAAC,EAAAC,cAACoN,GAAA,cAAD,CAAerK,IAAKoB,KAAKzC,MAAM2L,SAAStK,IAAKuK,WAAW,OAAOC,QAAS,KAEpEzN,EAAAC,EAAAC,cAACwN,GAAA,EAAD,KAEI1N,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CAAOC,KAAK,QAAQC,UAzCvB,WACb,OAEI5N,EAAAC,EAAAC,cAAC2N,EAAD,CACIhM,KAAMqC,EAAKtC,MAAMmB,OAAOA,OAAO+K,OAAO,SAACjM,GAAD,OAAUA,EAAKkM,WAAU,GAC/DjM,cAAeoC,EAAKtC,MAAMmB,OAAOvC,UACjCuB,aAAcmC,EAAKtC,MAAMmB,OAAOhB,aAChCC,UAAWkC,EAAKtC,MAAMoM,WAAWA,WAAWF,OAAO,SAAC9L,GAAD,OAAeA,EAAU+L,WAAU,GACtF9L,cAAeiC,EAAKtC,MAAMoM,WAAWxN,UACrCyN,YAAa/J,EAAKtC,MAAMoM,WAAW9K,OACnCf,OAAQ+B,EAAKtC,MAAM6J,QAAQA,QAAQqC,OAAO,SAAC3L,GAAD,OAAYA,EAAO4L,WAAU,GACvE3L,eAAgB8B,EAAKtC,MAAM6J,QAAQjL,UACnC6B,cAAe6B,EAAKtC,MAAM6J,QAAQvI,YAiC1BlD,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CAAOQ,OAAK,EAACP,KAAK,QAAQC,UAAW,kBAAM5N,EAAAC,EAAAC,cAACiO,EAAD,CAAMpL,OAAQmB,EAAKtC,MAAMmB,YACpE/C,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CAAOC,KAAK,gBAAgBC,UA5B7B,SAAAtN,GAAe,IAAZ8N,EAAY9N,EAAZ8N,MAClB,OAEIpO,EAAAC,EAAAC,cAACmO,GAAD,CACIxM,KAAMqC,EAAKtC,MAAMmB,OAAOA,OAAO+K,OAAO,SAACjM,GAAD,OAAUA,EAAKa,KAAO4L,SAASF,EAAMG,OAAOnE,OAAQ,MAAK,GAC/F5J,UAAW0D,EAAKtC,MAAMmB,OAAOvC,UAC7BC,OAAQyD,EAAKtC,MAAMmB,OAAOhB,aAC1B8I,SAAU3G,EAAKtC,MAAMiJ,SAASA,SAASiD,OAAO,SAACvD,GAAD,OAAaA,EAAQH,SAAWkE,SAASF,EAAMG,OAAOnE,OAAQ,MAC5GoE,eAAgBtK,EAAKtC,MAAMiJ,SAAS3H,OACpCiH,YAAajG,EAAKtC,MAAMuI,iBAoBhBnK,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CACIQ,OAAK,EACLP,KAAK,aACLC,UAAW,kBAAM5N,EAAAC,EAAAC,cAACuO,EAAD,CAASzJ,aAAcd,EAAKtC,MAAMoD,aAAcQ,kBAAmBtB,EAAKtC,MAAM4D,uBAEnGxF,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CAAOQ,OAAK,EAACP,KAAK,WAAWC,UAAW,kBAAM5N,EAAAC,EAAAC,cAACwO,GAAD,CAAOjD,QAASvH,EAAKtC,MAAM6J,aAGzEzL,EAAAC,EAAAC,cAACwN,GAAA,EAAD,CAAUlL,GAAG,aAKzBxC,EAAAC,EAAAC,cAACyO,GAAD,cAxEGxH,aAgFJyH,gBACXC,mBA3FoB,SAACxH,GACrB,MAAO,CACHtE,OAAQsE,EAAMtE,OACd8H,SAAUxD,EAAMwD,SAChBmD,WAAY3G,EAAM2G,WAClBvC,QAASpE,EAAMoE,UArBI,SAACqD,GACxB,MAAO,CACH3E,YAAa,SAACC,EAAQC,EAAQC,EAAQC,GAAzB,OAAqCuE,EFT/B,SAAC1E,EAAQC,EAAQC,EAAQC,GAAzB,OAAqC,SAACuE,GAC7D,IAAMC,EAAa,CACf3E,OAAQA,EACRC,OAAQA,EACRC,OAAQA,EACRC,QAASA,GAKb,OAHAwE,EAAW1D,MAAO,IAAID,MAAO4D,cAGtBC,KAAM7O,EAAU,WAAY,CAC/B8O,OAAQ,OACRpD,KAAMhH,KAAKC,UAAUgK,GACrBI,QAAS,CACLC,eAAgB,oBAEpBC,YAAa,gBAEZC,KACG,SAACC,GACG,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAACA,GAEG,MADa,IAAIC,MAAMD,EAAMlK,WAIpC+J,KAAK,SAACC,GAAD,OAAcA,EAASM,SAC5BP,KAAK,SAACC,GAAD,OAAcT,EAAS3C,GAAWoD,MACvCO,MAAM,SAACL,GACJM,QAAQC,IAAI,gBAAiBP,EAAMlK,SACnCV,MAAM,6BAA+B4K,EAAMlK,YE5BY4E,CAAYC,EAAQC,EAAQC,EAAQC,KAC/FvF,aAAc,SAACC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OACVuJ,EFoOgB,SAAC7J,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,GAAzD,OAAqE,SAACuJ,GAE9F,IAAMmB,EAAc,CAChBhL,UAAWA,EACXC,SAAUA,EACVC,OAAQA,EACRC,MAAOA,EACPC,MAAOA,EACPC,YAAaA,EACbC,QAASA,GAKb,OAHA0K,EAAY5E,MAAO,IAAID,MAAO4D,cAGvBC,KAAM7O,EAAU,WAAY,CAC/B8O,OAAQ,OACRpD,KAAMhH,KAAKC,UAAUkL,GACrBd,QAAS,CACLC,eAAgB,oBAEpBC,YAAa,gBAEZC,KACG,SAACC,GAEG,GADAQ,QAAQC,IAAI,yBAA2BlL,KAAKC,UAAUwK,IAClDA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAACA,GAEG,MADa,IAAIC,MAAMD,EAAMlK,WAIpC+J,KAAK,SAACC,GAAD,OAAcA,EAASM,SAC5BP,KAAK,SAACC,GAAD,OAAcT,EAAShC,GAAYyC,MACxCO,MAAM,SAACL,GACJM,QAAQC,IAAI,gBAAiBP,EAAMlK,SACnCV,MAAM,6BAA+B4K,EAAMlK,YE9QlCP,CAAaC,EAAWC,EAAUC,EAAQC,EAAOC,EAAOC,EAAaC,KAClF0H,YAAa,kBAAM6B,EFuCM,SAACA,GAI9B,OAHAA,EAAShN,IAAc,IAGhBmN,KAAM7O,EAAU,UAClBkP,KAEG,SAACC,GAGG,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAGnE,MAFAH,EAAMF,SAAWA,EAEXE,GAId,SAACA,GAEG,MADa,IAAIC,MAAMD,EAAMlK,WAIpC+J,KAAK,SAACC,GAAD,OAAcA,EAASM,SAC5BP,KAAK,SAACvM,GAAD,OAAY+L,EAASxC,GAAUvJ,MACpC+M,MAAM,SAACL,GAAD,OAAWX,EAASzC,GAAaoD,EAAMlK,eEjE9C2H,cAAe,kBAAM4B,EF4FM,SAACA,GAEhC,OAAOG,KAAM7O,EAAU,YAClBkP,KAEG,SAACC,GAGG,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAGnE,MAFAH,EAAMF,SAAWA,EAEXE,GAId,SAACA,GAEG,MADa,IAAIC,MAAMD,EAAMlK,WAIpC+J,KAAK,SAACC,GAAD,OAAcA,EAASM,SAC5BP,KAAK,SAACzE,GAAD,OAAciE,EAAStC,GAAY3B,MACxCiF,MAAM,SAACL,GAAD,OAAWX,EAASvC,GAAekD,EAAMlK,eEpHhD4H,YAAa,kBAAM2B,EFuIM,SAACA,GAG9B,OAFAA,EAAS7M,IAAc,IAEhBgN,KAAM7O,EAAU,cAClBkP,KAEG,SAACC,GAGG,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAGnE,MAFAH,EAAMF,SAAWA,EAEXE,GAId,SAACA,GAEG,MADa,IAAIC,MAAMD,EAAMlK,WAIpC+J,KAAK,SAACC,GAAD,OAAcA,EAASM,SAC5BP,KAAK,SAAC3C,GAAD,OAAYmC,EAASpC,GAAUC,MACpCmD,MAAM,SAACL,GAAD,OAAWX,EAASrC,GAAagD,EAAMlK,eEhK9C6H,aAAc,kBAAM0B,EFkLM,SAACA,GAG/B,OAFAA,EAAS1M,IAAe,IAEjB6M,KAAM7O,EAAU,WAClBkP,KACG,SAACC,GACG,GAAIA,EAASC,GACT,OAAOD,EAEP,IAAIE,EAAQ,IAAIC,MAAM,SAAWH,EAASI,OAAS,KAAOJ,EAASK,YAEnE,MADAH,EAAMF,SAAWA,EACXE,GAGd,SAACA,GAEG,MADa,IAAIC,MAAMD,EAAMlK,WAIpC+J,KAAK,SAACC,GAAD,OAAcA,EAASM,SAC5BP,KAAK,SAAC7D,GAAD,OAAaqD,EAASlC,GAAWnB,MACtCqE,MAAM,SAACL,GACJX,EAASjC,GAAc4C,EAAMlK,eEtMjCC,kBAAmB,kBAAMsJ,EAASoB,UAAQC,MAAM,gBAiGpDtB,CAGE7B,6DCzHOoD,GAAS,WAAmE,IAAlE/I,EAAkEgJ,UAAA7M,OAAA,QAAA8M,IAAAD,UAAA,GAAAA,UAAA,GAA1D,CAAE7P,WAAW,EAAM0C,OAAQ,KAAMH,OAAQ,IAAMwN,EAAWF,UAAA7M,OAAA,EAAA6M,UAAA,QAAAC,EACrF,OAAQC,EAAOtJ,MACX,IFDkB,aEEd,OAAO9C,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQ,KAAMH,OAAQwN,EAAOnE,UAEtE,IFNsB,iBEQlB,OAAOjI,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAM0C,OAAQ,KAAMH,OAAQ,KAE9D,IFTqB,gBEUjB,OAAOoB,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQqN,EAAOnE,QAASrJ,OAAQ,KAGzE,QACI,OAAOsE,ICfNoJ,GAAW,WAAoD,IAAnDpJ,EAAmDgJ,UAAA7M,OAAA,QAAA8M,IAAAD,UAAA,GAAAA,UAAA,GAA3C,CAAEnN,OAAQ,KAAM2H,SAAU,IAAM0F,EAAWF,UAAA7M,OAAA,EAAA6M,UAAA,QAAAC,EACxE,OAAQC,EAAOtJ,MACX,IHCoB,eGChB,OAAO9C,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQ,KAAM2H,SAAU0F,EAAOnE,UAExE,IHFuB,kBGGnB,OAAOjI,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQqN,EAAOnE,QAASvB,SAAU,KAE3E,IHVmB,cGWf,IAAIN,EAAUgG,EAAOnE,QAGrB,OAAOjI,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmBwD,SAAUxD,EAAMwD,SAASpI,OAAO8H,KAEvD,QACI,OAAOlD,IChBNqJ,GAAa,WAAuE,IAAtErJ,EAAsEgJ,UAAA7M,OAAA,QAAA8M,IAAAD,UAAA,GAAAA,UAAA,GAA9D,CAAE7P,WAAW,EAAM0C,OAAQ,KAAM8K,WAAY,IAAMuC,EAAWF,UAAA7M,OAAA,EAAA6M,UAAA,QAAAC,EAC7F,OAAQC,EAAOtJ,MACX,IJIkB,aIHd,OAAO9C,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQ,KAAM8K,WAAYuC,EAAOnE,UAE1E,IJAsB,iBIElB,OAAOjI,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAM0C,OAAQ,KAAM8K,WAAY,KAElE,IJFqB,gBIGjB,OAAO7J,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQqN,EAAOnE,QAAS4B,WAAY,KAE7E,QACI,OAAO3G,ICbNsJ,GAAU,WAAoE,IAAnEtJ,EAAmEgJ,UAAA7M,OAAA,QAAA8M,IAAAD,UAAA,GAAAA,UAAA,GAA3D,CAAE7P,WAAW,EAAM0C,OAAQ,KAAMuI,QAAS,IAAM8E,EAAWF,UAAA7M,OAAA,EAAA6M,UAAA,QAAAC,EACvF,OAAQC,EAAOtJ,MACX,ILOmB,cKNf,OAAO9C,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQ,KAAMuI,QAAS8E,EAAOnE,UAEvE,ILGuB,kBKFnB,OAAOjI,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAM0C,OAAQ,KAAMuI,QAAS,KAE/D,ILEsB,iBKDlB,OAAOtH,OAAAqM,GAAA,EAAArM,CAAA,GAAKkD,EAAZ,CAAmB7G,WAAW,EAAO0C,OAAQqN,EAAOnE,QAASX,QAAS,KAE1E,QACI,OAAOpE,ICdNuJ,GAAkB,CAC3B3L,UAAW,GACXC,SAAU,GACVC,OAAQ,GACRE,OAAO,EACPC,YAAa,QACbC,QAAS,ICEPsL,GCKYC,uBAEVC,2BAAgB5M,OAAAqM,GAAA,EAAArM,CAAA,CACZpB,OAAQqN,GACRvF,SAAU4F,GACVzC,WAAY0C,GACZjF,QAASkF,IAGNK,sBAAY,CAEXjE,SAAU6D,OAIlBK,2BAAgBC,KAAOC,ODHhBC,oLAbP,OAEIpR,EAAAC,EAAAC,cAACmR,GAAA,SAAD,CAAUR,MAAOA,IACb7Q,EAAAC,EAAAC,cAACqC,EAAA,EAAD,KACIvC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACoR,GAAD,gBAPNnK,aEEEoK,QACW,cAA7BC,OAAOjE,SAASkE,UAEe,UAA7BD,OAAOjE,SAASkE,UAEhBD,OAAOjE,SAASkE,SAASrD,MACvB,2DCPNsD,IAASC,OAAO3R,EAAAC,EAAAC,cAAC0R,GAAD,MAASC,SAASC,eAAe,SDsH3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAM3C,KAAK,SAAA4C,GACjCA,EAAaC","file":"static/js/main.77dcd20e.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport const Loading = () => {\r\n    return (\r\n        <div className=\"col-12\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\" />\r\n            <p>Loading...</p>\r\n        </div>\r\n    );\r\n};\r\n","//Configuration file for connecting with the server\r\nexport const baseUrl = \"http://localhost:3001/\";\r\n","import React from \"react\";\r\nimport { Card, CardImg, CardText, CardBody, CardTitle, CardSubtitle } from \"reactstrap\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform } from \"react-animation-components\";\r\n\r\n//this componennt is only implemented in this component, so it is defined here\r\n//Define as a new component file if need to be used in other components\r\nfunction RenderCard({ item, isLoading, errMes }) {\r\n    if (isLoading) {\r\n        return <Loading />;\r\n    } else if (errMes) {\r\n        return <h4>{errMes}</h4>;\r\n    } else {\r\n        return (\r\n            <FadeTransform in transformProps={{ exitTransform: \"scale(0.5) translateY(-50%)\" }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\r\n                    <CardBody>\r\n                        <CardTitle>{item.name}</CardTitle>\r\n                        {/* Designation exists only for leader, so render if exists */}\r\n                        {/* null return no element */}\r\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null}\r\n                        <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props) {\r\n    return (\r\n        <div className='container'>\r\n            <div className='row align-items-start'>\r\n                <div className='col-12 col-md m-1'>\r\n                    <RenderCard item={props.dish} isLoading={props.dishesLoading} errMes={props.dishesErrMes} />\r\n                </div>\r\n                <div className='col-12 col-md m-1'>\r\n                    <RenderCard item={props.promotion} isLoading={props.promosLoading} errMes={props.promosErrMes} />\r\n                </div>\r\n                <div className='col-12 col-md m-1'>\r\n                    <RenderCard item={props.leader} isLoading={props.leadersLoading} errMes={props.leadersErrMes} />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport { Card, CardImg, CardImgOverlay, CardTitle, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\n\r\n//Changed a presentational component to functional component since this componet works only with the props sent by\r\n//its parent and there are no any local states or lifecycle hooks required\r\n\r\n//dish and onClick are javaScript objects, so needs to be inside curly braces\r\nfunction RenderMenuItem({ dish }) {\r\n    return (\r\n        // tag=li indicates these are going to be a list item\r\n        <Card>\r\n            {/* Parameters are passed to a link as below enclosed in BACK QUOTES */}\r\n            <Link to={`/menu/${dish.id}`}>\r\n                <CardImg width='100%' src={baseUrl + dish.image} alt={dish.description} />\r\n                <CardImgOverlay>\r\n                    <CardTitle>{dish.name}</CardTitle>\r\n                </CardImgOverlay>\r\n            </Link>\r\n        </Card>\r\n    );\r\n}\r\n\r\n//Same thing as above but an arrow function\r\n//This const Menu is the component in MainComponent, props is the props passed from MainComponent\r\nconst Menu = (props) => {\r\n    //ForEach dishes array with map function and return individual ment items as react component\r\n    const menu = props.dishes.dishes.map((dish) => {\r\n        return (\r\n            //React requires a key while rendering a list of items to identify each items uniquely\r\n            <div key={dish.id} className='col-12 col-md-5 m-1'>\r\n                {/* RenderMenuItem component defined above which passes the dish as props */}\r\n                <RenderMenuItem dish={dish} />\r\n            </div>\r\n        );\r\n    });\r\n\r\n    if (props.dishes.isLoading) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.dishes.errmes) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <h4>{props.dishes.errmes}</h4>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                        <h3>Menu</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>{menu}</div>\r\n            </div>\r\n        );\r\n    }\r\n};\r\n\r\n//Export component from this file\r\n//So, it can be imported in other files\r\nexport default Menu;\r\n","import React, { Component } from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem, Row, Button, Label, Col } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Control, Form, Errors } from \"react-redux-form\";\r\n\r\n//Functions required for form-validation\r\n\r\n//Check if value's length is more than zero\r\nconst required = (val) => val && val.length;\r\n// Double arrow function is function of function\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\nconst isNumber = (val) => !isNaN(Number(val));\r\n//Validate email using regex\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    handleSubmit(values) {\r\n        alert(\"Current state is: \" + JSON.stringify(values));\r\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.agree, values.contactType, values.message);\r\n        this.props.resetFeedbackForm();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                        <h3>Contact Us</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n\r\n                <div className='row row-content'>\r\n                    <div className='col-12'>\r\n                        <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className='col-12 col-sm-4 offset-sm-1'>\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road\r\n                            <br />\r\n                            Clear Water Bay, Kowloon\r\n                            <br />\r\n                            HONG KONG\r\n                            <br />\r\n                            <i className='fa fa-phone' />: +852 1234 5678\r\n                            <br />\r\n                            <i className='fa fa-fax' />: +852 8765 4321\r\n                            <br />\r\n                            <i className='fa fa-envelope' />: <a href='mailto:confusion@food.net'>confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className='col-12 col-sm-6 offset-sm-1'>\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className='col-12 col-sm-11 offset-sm-1'>\r\n                        <div className='btn-group' role='group'>\r\n                            <a role='button' className='btn btn-primary' href='tel:+85212345678'>\r\n                                <i className='fa fa-phone' /> Call\r\n                            </a>\r\n                            {/* eslint-disable-next-line */}\r\n                            <a role='button' className='btn btn-info'>\r\n                                <i className='fa fa-skype' /> Skype\r\n                            </a>\r\n                            <a role='button' className='btn btn-success' href='mailto:confusion@food.net'>\r\n                                <i className='fa fa-envelope-o' /> Email\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='row row-content'>\r\n                    <div className='col-12'>\r\n                        <h3>Send us Your Feedback</h3>\r\n                    </div>\r\n                    <div className='col-12 col-md-9'>\r\n                        {/* react-redux form: values passed automatically by the application */}\r\n                        <Form model='feedback' onSubmit={(values) => this.handleSubmit(values)}>\r\n                            <Row className='form-group'>\r\n                                <Col md={2}>\r\n                                    <Label htmlFor='firstname'>First Name</Label>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model='.firstname'\r\n                                        id='firstname'\r\n                                        name='firstname'\r\n                                        placeholder='First Name'\r\n                                        className='form-control'\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(10)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.firstname'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 characters\",\r\n                                            maxLength: \"Must be 10 characters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={2}>\r\n                                    <Label htmlFor='lastname'>Last Name</Label>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model='.lastname'\r\n                                        id='lastname'\r\n                                        name='lastname'\r\n                                        placeholder='Last Name'\r\n                                        className='form-control'\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(10)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.lastname'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 characters\",\r\n                                            maxLength: \"Must be 10 characters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={2}>\r\n                                    <Label htmlFor='telnum'>Phone Number</Label>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model='.telnum'\r\n                                        id='telnum'\r\n                                        name='telnum'\r\n                                        placeholder='Phone Number'\r\n                                        className='form-control'\r\n                                        validators={{\r\n                                            required,\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15),\r\n                                            isNumber\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.telnum'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 numbers\",\r\n                                            maxLength: \"Must be 15 numbers or less\",\r\n                                            isNumber: \"Must be a number\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={2}>\r\n                                    <Label htmlFor='email'>Email</Label>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    <Control.text\r\n                                        model='.email'\r\n                                        id='email'\r\n                                        name='email'\r\n                                        placeholder='Email'\r\n                                        className='form-control'\r\n                                        validators={{\r\n                                            required,\r\n                                            validEmail\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.email'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            validEmail: \"Invalid email address\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{ size: 6, offset: 2 }}>\r\n                                    <div className='form-ceck'>\r\n                                        <Label check>\r\n                                            <Control.checkbox model='.agree' name='agree' className='form-check-input' />{\" \"}\r\n                                            <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{ size: 3, offset: 1 }}>\r\n                                    <Control.select model='.contactType' name='contactType' className='form-control'>\r\n                                        <option>Phone</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={2}>\r\n                                    <Label htmlFor='message'>Your Feedback</Label>\r\n                                </Col>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model='.message' id='message' name='message' rows='12' className='form-control' />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col md={{ size: 10, offset: 2 }}>\r\n                                    <Button type='submit' color='primary'>\r\n                                        Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Contact;\r\n","import React, { Component } from 'react';\r\nimport {\r\n    Nav,\r\n    Navbar,\r\n    NavbarBrand,\r\n    NavbarToggler,\r\n    Collapse,\r\n    NavItem,\r\n    Jumbotron,\r\n    Button,\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    Form,\r\n    FormGroup,\r\n    Label,\r\n    Input\r\n} from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n    constructor(props) {\r\n        //Always required for a constructor\r\n        super(props);\r\n\r\n        //State should be defined in the constructor of a component\r\n        //State stores properties related to a component\r\n        this.state = {\r\n            isNavOpen: false,\r\n            isModalOpen: false\r\n        };\r\n\r\n        // Bind toggleNav in order ot make it available to use in JSX\r\n        this.toggleNav = this.toggleNav.bind(this);\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n        this.handleLogin = this.handleLogin.bind(this);\r\n        this.handleLogout = this.handleLogout.bind(this);\r\n    }\r\n\r\n    toggleNav() {\r\n        //Change the state of isNavOpen\r\n        this.setState({\r\n            isNavOpen: !this.state.isNavOpen\r\n        });\r\n    }\r\n\r\n    toggleModal() {\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    //Function to handle login\r\n    handleLogin(event) {\r\n        //Close the login form modal\r\n        this.toggleModal();\r\n        this.props.loginUser({ username: this.username.value, password: this.password.value });\r\n        event.preventDefault();\r\n    }\r\n\r\n    handleLogout() {\r\n        this.props.logoutUser();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //React fragments (can be used like this as well <> </>) enables to group bunch of react elements and return it\r\n            <React.Fragment>\r\n                <Navbar dark expand='md'>\r\n                    <div className='container'>\r\n                        <NavbarToggler onClick={this.toggleNav} />\r\n                        <NavbarBrand className='mr-auto' href='/'>\r\n                            <img src='assets/images/logo.png' height='30' width='41' alt='Ristorante Con Fusion' />\r\n                        </NavbarBrand>\r\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                            <Nav navbar>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/home'>\r\n                                        <span className='fa fa-home fa-lg'> Home</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/menu'>\r\n                                        <span className='fa fa-list fa-lg'> Menu</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/aboutus'>\r\n                                        <span className='fa fa-info fa-lg'> About Us</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                                <NavItem>\r\n                                    <NavLink className='nav-link' to='/contactus'>\r\n                                        <span className='fa fa-address-card fa-lg'> Contact Us</span>\r\n                                    </NavLink>\r\n                                </NavItem>\r\n                            </Nav>\r\n                            <Nav className='ml-auto' navbar>\r\n                                <NavItem>\r\n                                    {!this.props.isAuthenticated ? (\r\n                                        <Button outline onClick={this.toggleModal}>\r\n                                            <span className='fa fa-sign-in fa-lg'>Login</span>\r\n                                            {this.props.auth.isFetching ? <span className='fa fa-spinner fa-pulse fa-fw' /> : null}\r\n                                        </Button>\r\n                                    ) : (\r\n                                        <div>\r\n                                            <div className='navbar-text mr-3'>{this.props.auth.user.username}</div>\r\n                                            <Button outline onClick={this.handleLogout}>\r\n                                                <span className='fa fa-sign-out fa-lg'>Logout</span>\r\n                                                {this.props.auth.isFetching ? <span className='fa fa-spinner fa-pulse fa-fw' /> : null}\r\n                                            </Button>\r\n                                        </div>\r\n                                    )}\r\n                                </NavItem>\r\n                            </Nav>\r\n                        </Collapse>\r\n                    </div>\r\n                </Navbar>\r\n                <Jumbotron>\r\n                    <div className='container'>\r\n                        <div className='row row-header'>\r\n                            <div className='col-12 col-sm-6'>\r\n                                <h1>Ristorante ConFusion</h1>\r\n                                <p>\r\n                                    We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking\r\n                                    creations will tickle your culinary senses!\r\n                                </p>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </Jumbotron>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\r\n                    <ModalBody>\r\n                        {/* An uncontrolled react form */}\r\n                        <Form onSubmit={this.handleLogin}>\r\n                            <FormGroup>\r\n                                <Label htmlFor='username'>Username</Label>\r\n                                <Input type='text' id='username' name='username' innerRef={(input) => (this.username = input)} />\r\n                            </FormGroup>\r\n                            <FormGroup>\r\n                                <Label htmlFor='password'>Password</Label>\r\n                                <Input type='password' id='password' name='password' innerRef={(input) => (this.password = input)} />\r\n                            </FormGroup>\r\n                            <FormGroup check>\r\n                                <Label check>\r\n                                    <Input type='checkbox' name='remember' innerRef={(input) => (this.remember = input)} />\r\n                                    Remember me\r\n                                </Label>\r\n                            </FormGroup>\r\n                            <Button type='submit' value='submit' color='primary'>\r\n                                Login\r\n                            </Button>\r\n                        </Form>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction Footer(props) {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-4 offset-1 col-sm-2\">\r\n                        <h5>Links</h5>\r\n                        <ul className=\"list-unstyled\">\r\n                            <li>\r\n                                <Link to=\"/home\">Home</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/aboutus\">About Us</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/menu\">Menu</Link>\r\n                            </li>\r\n                            <li>\r\n                                <Link to=\"/contactus\">Contact Us</Link>\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"col-7 col-sm-5\">\r\n                        <h5>Our Address</h5>\r\n                        <address>\r\n                            121, Clear Water Bay Road\r\n                            <br />\r\n                            Clear Water Bay, Kowloon\r\n                            <br />\r\n                            HONG KONG\r\n                            <br />\r\n                            <i className=\"fa fa-phone fa-lg\" />: +852 1234 5678\r\n                            <br />\r\n                            <i className=\"fa fa-fax fa-lg\" />: +852 8765 4321\r\n                            <br />\r\n                            <i className=\"fa fa-envelope fa-lg\" />:{\" \"}\r\n                            <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                        </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 align-self-center\">\r\n                        <div className=\"text-center\">\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\">\r\n                                <i className=\"fa fa-google-plus\" />\r\n                            </a>\r\n                            <a\r\n                                className=\"btn btn-social-icon btn-facebook\"\r\n                                href=\"http://www.facebook.com/profile.php?id=\"\r\n                            >\r\n                                <i className=\"fa fa-facebook\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\">\r\n                                <i className=\"fa fa-linkedin\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\">\r\n                                <i className=\"fa fa-twitter\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\">\r\n                                <i className=\"fa fa-youtube\" />\r\n                            </a>\r\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\">\r\n                                <i className=\"fa fa-envelope-o\" />\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col-auto\">\r\n                        <p>© Copyright 2019 Ristorante Con Fusion</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Footer;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, ModalHeader, ModalBody, Row, Col, Label } from \"reactstrap\";\r\nimport { Control, LocalForm, Errors } from \"react-redux-form\";\r\n\r\n//Functions required for form-validation\r\nconst maxLength = (len) => (val) => !val || val.length <= len;\r\nconst minLength = (len) => (val) => val && val.length >= len;\r\n\r\nclass CommentForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            isModalOpen: false\r\n        };\r\n\r\n        this.toggleModal = this.toggleModal.bind(this);\r\n    }\r\n\r\n    //Function to toggle 'Submit Comment' modal\r\n    toggleModal() {\r\n        //Set the isModalOpen to true or false\r\n        this.setState({\r\n            isModalOpen: !this.state.isModalOpen\r\n        });\r\n    }\r\n\r\n    handleCommentSubmit(values) {\r\n        this.toggleModal();\r\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            //React fragments (can be used like this as well <> </>) enables to group bunch of react elements and return it\r\n            <React.Fragment>\r\n                {/* Button to toggle form modal */}\r\n                <Button outline onClick={this.toggleModal} className='col-6'>\r\n                    <span className='fa fa-pencil fa-lg'>Submit Comment</span>\r\n                </Button>\r\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\r\n                    <ModalBody>\r\n                        <LocalForm onSubmit={(values) => this.handleCommentSubmit(values)}>\r\n                            <Row className='form-group'>\r\n                                <Col xs={12}>\r\n                                    <Label htmlFor='rating'>Rating</Label>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Control.select model='.rating' name='rating' className='form-control'>\r\n                                        <option>1</option>\r\n                                        <option>2</option>\r\n                                        <option>3</option>\r\n                                        <option>4</option>\r\n                                        <option>5</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col xs={12}>\r\n                                    <Label htmlFor='author'>Your Name</Label>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Control.text\r\n                                        model='.author'\r\n                                        id='author'\r\n                                        name='author'\r\n                                        placeholder='Your Name'\r\n                                        className='form-control'\r\n                                        validators={{\r\n                                            minLength: minLength(3),\r\n                                            maxLength: maxLength(15)\r\n                                        }}\r\n                                    />\r\n                                    <Errors\r\n                                        className='text-danger'\r\n                                        model='.name'\r\n                                        show='touched'\r\n                                        messages={{\r\n                                            required: \"Required\",\r\n                                            minLength: \"Must be greater than 2 characters\",\r\n                                            maxLength: \"Must be 15 characters or less\"\r\n                                        }}\r\n                                    />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col xs={12}>\r\n                                    <Label htmlFor='name'>Comment</Label>\r\n                                </Col>\r\n                                <Col xs={12}>\r\n                                    <Control.textarea model='.comment' id='comment' name='comment' rows='6' className='form-control' />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className='form-group'>\r\n                                <Col xs={12}>\r\n                                    <Button type='submit' color='primary'>\r\n                                        Submit\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </LocalForm>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CommentForm;\r\n","import React from \"react\";\r\nimport { Card, CardImg, CardBody, CardTitle, CardText, Breadcrumb, BreadcrumbItem } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport CommentForm from \"./CommentFormComponent\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { FadeTransform, Fade, Stagger } from \"react-animation-components\";\r\n\r\n//Functional component\r\n\r\n//User defined components always start with capital letters\r\nfunction RenderDish({ dish }) {\r\n    return (\r\n        <div key={dish.id} className='col-12 col-md-5 m-1'>\r\n            <FadeTransform in transformProps={{ exitTransform: \"scale(0.5) translateY(-50%)\" }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl + dish.image} alt={dish.name} width='100%' />\r\n                    <CardBody>\r\n                        <CardTitle>{dish.name}</CardTitle>\r\n                        <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction RenderComments({ comments, postComment, dishId }) {\r\n    if (comments) {\r\n        return (\r\n            <div className='col-12 col-md-5 m-1'>\r\n                <Card className='p-1'>\r\n                    <h4>Comments</h4>\r\n                    <ul className='list-unstyled'>\r\n                        <Stagger in>\r\n                            {comments.map((comment) => {\r\n                                return (\r\n                                    <Fade in key={comment.id}>\r\n                                        <li>{comment.comment}</li>\r\n                                        <li>\r\n                                            -- {comment.author}, &nbsp;\r\n                                            {new Intl.DateTimeFormat(\"en-FI\", {\r\n                                                year: \"numeric\",\r\n                                                month: \"long\",\r\n                                                day: \"2-digit\"\r\n                                            }).format(new Date(comment.date))}\r\n                                        </li>\r\n                                    </Fade>\r\n                                );\r\n                            })}\r\n                        </Stagger>\r\n                    </ul>\r\n                    <CommentForm dishId={dishId} postComment={postComment} />\r\n                </Card>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <div />;\r\n    }\r\n}\r\n\r\nconst DishDetail = (props) => {\r\n    if (props.isLoading) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else if (props.errMes) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <h4>{props.errMes}</h4>>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\n    if (props.dish) {\r\n        return (\r\n            <div className='container'>\r\n                <div className='row'>\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/home'>Home</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem>\r\n                            <Link to='/menu'>Menu</Link>\r\n                        </BreadcrumbItem>\r\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className='col-12'>\r\n                        <h3>{props.dish.name}</h3>\r\n                        <hr />\r\n                    </div>\r\n                </div>\r\n                <div className='row'>\r\n                    <RenderDish dish={props.dish} />\r\n                    <RenderComments comments={props.comments} postComment={props.postComment} dishId={props.dish.id} />\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        //Return empty div\r\n        return <div />;\r\n    }\r\n};\r\n\r\nexport default DishDetail;\r\n","import React from \"react\";\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from \"reactstrap\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Loading } from \"./LoadingComponent\";\r\nimport { baseUrl } from \"../shared/baseUrl\";\r\nimport { Fade, Stagger } from \"react-animation-components\";\r\n\r\nfunction RenderLeaders({ leaders }) {\r\n    if (leaders.isLoading) {\r\n        return (\r\n            <div className='col-12'>\r\n                <Loading />\r\n            </div>\r\n        );\r\n    } else if (leaders.errmes) {\r\n        return (\r\n            <div className='col-12'>\r\n                <h4>{leaders.errmes}</h4>\r\n            </div>\r\n        );\r\n    } else {\r\n        return (\r\n            <div className='col-12 row'>\r\n                <Media list>\r\n                    <Stagger in>\r\n                        {leaders.leaders.map((leader) => {\r\n                            return (\r\n                                <Fade in key={leader.id}>\r\n                                    <div className='row col-12 mb-4'>\r\n                                        <Media top className='col-2 mr-4'>\r\n                                            <Media object src={baseUrl + leader.image} alt={leader.name} />\r\n                                        </Media>\r\n                                        <Media body className='col-10'>\r\n                                            <Media heading>{leader.name}</Media>\r\n                                            <p>{leader.designation}</p>\r\n                                            <p>{leader.description}</p>\r\n                                        </Media>\r\n                                    </div>\r\n                                </Fade>\r\n                            );\r\n                        })}\r\n                    </Stagger>\r\n                </Media>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction About(props) {\r\n    return (\r\n        <div className='container'>\r\n            <div className='row'>\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem>\r\n                        <Link to='/home'>Home</Link>\r\n                    </BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className='col-12'>\r\n                    <h3>About Us</h3>\r\n                    <hr />\r\n                </div>\r\n            </div>\r\n            <div className='row row-content'>\r\n                <div className='col-12 col-md-6'>\r\n                    <h2>Our History</h2>\r\n                    <p>\r\n                        Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its\r\n                        unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong\r\n                        Kong. Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the\r\n                        next time you visit us.\r\n                    </p>\r\n                    <p>\r\n                        The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan,\r\n                        that featured for the first time the world's best cuisines in a pan.\r\n                    </p>\r\n                </div>\r\n                <div className='col-12 col-md-5'>\r\n                    <Card>\r\n                        <CardHeader className='bg-primary text-white'>Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className='row p-1'>\r\n                                <dt className='col-6'>Started</dt>\r\n                                <dd className='col-6'>3 Feb. 2013</dd>\r\n                                <dt className='col-6'>Major Stake Holder</dt>\r\n                                <dd className='col-6'>HK Fine Foods Inc.</dd>\r\n                                <dt className='col-6'>Last Year's Turnover</dt>\r\n                                <dd className='col-6'>$1,250,375</dd>\r\n                                <dt className='col-6'>Employees</dt>\r\n                                <dd className='col-6'>40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className='col-12'>\r\n                    <Card>\r\n                        <CardBody className='bg-faded'>\r\n                            <blockquote className='blockquote'>\r\n                                <p className='mb-0'>You better cut the pizza in four pieces because I'm not hungry enough to eat six.</p>\r\n                                <footer className='blockquote-footer'>\r\n                                    Yogi Berra,\r\n                                    <cite title='Source Title'>The Wit and Wisdom of Yogi Berra, P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className='row row-content'>\r\n                <div className='col-12'>\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <RenderLeaders leaders={props.leaders} />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;\r\n","//Import everything that is being exported from ActionType.js\r\nimport * as ActionTypes from './ActionTypes';\r\nimport { baseUrl } from '../shared/baseUrl';\r\nimport fetch from 'cross-fetch';\r\n\r\n//Export the function to add comment as postComment action\r\n// Thunk returns function instead of an action object\r\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\r\n    const newComment = {\r\n        dishId: dishId,\r\n        rating: rating,\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date = new Date().toISOString();\r\n\r\n    //POST the comment to json-server using fetch's post operation\r\n    return fetch(baseUrl + 'comments', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                let errmes = new Error(error.message);\r\n                throw errmes;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((response) => dispatch(addComment(response)))\r\n        .catch((error) => {\r\n            console.log('Post comment ', error.message);\r\n            alert('Error in posting comment. ' + error.message);\r\n        });\r\n};\r\n\r\nexport const addComment = (comment) => ({\r\n    type: ActionTypes.ADD_COMMENT,\r\n    // Data to be added as comment sent as payload\r\n    payload: comment\r\n});\r\n\r\n//DISHES\r\n\r\n//Create fetchDishes as a thunk, returns dispatch as a function\r\n// Thunk returns function instead of an action object\r\nexport const fetchDishes = () => (dispatch) => {\r\n    dispatch(dishesLoading(true));\r\n\r\n    //Fetch dishes from server using fetch API, convert the response to json and Dispacth a call to addDishes function\r\n    return fetch(baseUrl + 'dishes')\r\n        .then(\r\n            // Receive response from the server\r\n            (response) => {\r\n                //Handle the errors\r\n                // if response.ok is true, then the request was successful\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    //Throw the error to the catch function\r\n                    throw error;\r\n                }\r\n            },\r\n            // Could not receive response from the server\r\n            (error) => {\r\n                let errmes = new Error(error.message);\r\n                throw errmes;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((dishes) => dispatch(addDishes(dishes)))\r\n        .catch((error) => dispatch(dishesFailed(error.message)));\r\n};\r\n\r\n//This is not a thunk since it is returning an action opject\r\nexport const dishesLoading = () => {\r\n    // Return an DISHES_LOADING action without data\r\n    return {\r\n        type: ActionTypes.DISHES_LOADING\r\n    };\r\n};\r\n\r\nexport const dishesFailed = (errmes) => {\r\n    return {\r\n        type: ActionTypes.DISHES_FAILED,\r\n        payload: errmes\r\n    };\r\n};\r\n\r\nexport const addDishes = (dishes) => {\r\n    return {\r\n        type: ActionTypes.ADD_DISHES,\r\n        payload: dishes\r\n    };\r\n};\r\n\r\n//COMMENTS\r\n\r\nexport const fetchComments = () => (dispatch) => {\r\n    //Fetch comments from server using fetch API, convert the response to json and Dispacth a call to addComments function\r\n    return fetch(baseUrl + 'comments')\r\n        .then(\r\n            // Receive response from the server\r\n            (response) => {\r\n                //Handle the errors\r\n                // if response.ok is true, then the request was successful\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    //Throw the error to the catch function\r\n                    throw error;\r\n                }\r\n            },\r\n            // Could not receive response from the server\r\n            (error) => {\r\n                let errmes = new Error(error.message);\r\n                throw errmes;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((comments) => dispatch(addComments(comments)))\r\n        .catch((error) => dispatch(commentsFailed(error.message)));\r\n};\r\n\r\nexport const commentsFailed = (errmes) => {\r\n    return {\r\n        type: ActionTypes.COMMENTS_FAILED,\r\n        payload: errmes\r\n    };\r\n};\r\n\r\nexport const addComments = (comments) => {\r\n    return {\r\n        type: ActionTypes.ADD_COMMENTS,\r\n        payload: comments\r\n    };\r\n};\r\n\r\n//PROMOS\r\n\r\nexport const fetchPromos = () => (dispatch) => {\r\n    dispatch(promosLoading(true));\r\n\r\n    return fetch(baseUrl + 'promotions')\r\n        .then(\r\n            // Receive response from the server\r\n            (response) => {\r\n                //Handle the errors\r\n                // if response.ok is true, then the request was successful\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    //Throw the error to the catch function\r\n                    throw error;\r\n                }\r\n            },\r\n            // Could not receive response from the server\r\n            (error) => {\r\n                let errmes = new Error(error.message);\r\n                throw errmes;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((promos) => dispatch(addPromos(promos)))\r\n        .catch((error) => dispatch(promosFailed(error.message)));\r\n};\r\n\r\nexport const promosLoading = () => ({\r\n    type: ActionTypes.PROMOS_LOADING\r\n});\r\n\r\nexport const promosFailed = (errmes) => ({\r\n    type: ActionTypes.PROMOS_FAILED,\r\n    payload: errmes\r\n});\r\n\r\nexport const addPromos = (promos) => ({\r\n    type: ActionTypes.ADD_PROMOS,\r\n    payload: promos\r\n});\r\n\r\n// LEADERS\r\nexport const fetchLeaders = () => (dispatch) => {\r\n    dispatch(leadersLoading(true));\r\n\r\n    return fetch(baseUrl + 'leaders')\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                let errmes = new Error(error.message);\r\n                throw errmes;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((leaders) => dispatch(addLeaders(leaders)))\r\n        .catch((error) => {\r\n            dispatch(leadersFailed(error.message));\r\n        });\r\n};\r\n\r\nexport const leadersLoading = () => {\r\n    return {\r\n        type: ActionTypes.LEADERS_LOADING\r\n    };\r\n};\r\n\r\nexport const addLeaders = (leaders) => {\r\n    return {\r\n        type: ActionTypes.ADD_LEADERS,\r\n        payload: leaders\r\n    };\r\n};\r\n\r\nexport const leadersFailed = (errmes) => {\r\n    return {\r\n        type: ActionTypes.LEADERS_FAILED,\r\n        payload: errmes\r\n    };\r\n};\r\n\r\nexport const postFeedback = (firstname, lastname, telnum, email, agree, contactType, message) => (dispatch) => {\r\n    //Create a javascript object for feedback\r\n    const newFeedback = {\r\n        firstname: firstname,\r\n        lastname: lastname,\r\n        telnum: telnum,\r\n        email: email,\r\n        agree: agree,\r\n        contactType: contactType,\r\n        message: message\r\n    };\r\n    newFeedback.date = new Date().toISOString();\r\n\r\n    //POST the feedback to json-server using fetch's post operation\r\n    return fetch(baseUrl + 'feedback', {\r\n        method: 'POST',\r\n        body: JSON.stringify(newFeedback),\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    })\r\n        .then(\r\n            (response) => {\r\n                console.log('Response postFeedback ' + JSON.stringify(response));\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                let errmes = new Error(error.message);\r\n                throw errmes;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((response) => dispatch(addFeedback(response)))\r\n        .catch((error) => {\r\n            console.log('Post comment ', error.message);\r\n            alert('Error in posting comment. ' + error.message);\r\n        });\r\n};\r\n\r\nexport const addFeedback = (feedback) => {\r\n    return {\r\n        type: ActionTypes.ADD_FEEDBACK,\r\n        payload: feedback\r\n    };\r\n};\r\n\r\n// USER AUTHORIZATION\r\n\r\nexport const requestLogin = (creds) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_REQUEST,\r\n        creds\r\n    };\r\n};\r\n\r\nexport const receiveLogin = (response) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_SUCCESS,\r\n        token: response.token\r\n    };\r\n};\r\n\r\nexport const loginFailure = (message) => {\r\n    return {\r\n        type: ActionTypes.LOGIN_FAILURE,\r\n        message\r\n    };\r\n};\r\n\r\nexport const loginUser = (creds) => (dispatch) => {\r\n    // Dispatch requestLogin to start the call to the login API\r\n    dispatch(requestLogin(creds));\r\n\r\n    // fetch POST request to login route in the server\r\n    return fetch(baseUrl + 'users/login', {\r\n        method: 'POST',\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        body: JSON.stringify(creds)\r\n    })\r\n        .then(\r\n            (response) => {\r\n                if (response.ok) {\r\n                    return response;\r\n                } else {\r\n                    let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                    error.response = response;\r\n                    throw error;\r\n                }\r\n            },\r\n            (error) => {\r\n                throw error;\r\n            }\r\n        )\r\n        .then((response) => response.json())\r\n        .then((response) => {\r\n            // response.success is set as true or false in server\r\n            if (response.success) {\r\n                // If login was successful, set the token received from server in local storage\r\n                localStorage.setItem('token', response.token);\r\n                // Also store the user's credentials in local storage\r\n                localStorage.setItem('creds', JSON.stringify(creds));\r\n\r\n                // Dispatch the success action\r\n                dispatch(receiveLogin(response));\r\n            } else {\r\n                let error = new Error('Error ' + response.status + ': ' + response.statusText);\r\n                error.response = response;\r\n                throw error;\r\n            }\r\n        })\r\n        .catch((error) => dispatch(loginFailure(error.message)));\r\n};\r\n","//File to define various action types\r\nexport const ADD_COMMENT = 'ADD_COMMENT';\r\nexport const DISHES_LOADING = 'DISHES_LOADING';\r\nexport const DISHES_FAILED = 'DISHES_FAILED';\r\nexport const ADD_DISHES = 'ADD_DISHES';\r\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\r\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\r\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\r\nexport const ADD_PROMOS = 'ADD_PROMOS';\r\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\r\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\r\nexport const ADD_LEADERS = 'ADD_LEADERS';\r\nexport const LEADERS_FAILED = 'LEADERS_FAILED';\r\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';\r\nexport const LOGIN_REQUEST = 'LOGIN_REQUEST';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAILURE = 'LOGIN_FAILURE';\r\nexport const LOGOUT_REQUEST = 'LOGOUT_REQUEST';\r\nexport const LOGOUT_SUCCESS = 'LOGOUT_SUCCESS';\r\nexport const LOGOUT_FAILURE = 'LOGOUT_FAILURE ';\r\n","import React, { Component } from \"react\";\r\nimport Home from \"./HomeComponent\";\r\nimport Menu from \"./MenuComponent\";\r\nimport Contact from \"./ContactComponent\";\r\nimport Header from \"./HeaderComponent\";\r\nimport Footer from \"./FooterComponent\";\r\nimport DishDetail from \"./DishDetailComponent\";\r\nimport About from \"./AboutComponent\";\r\nimport { Switch, Route, Redirect, withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport { postComment, postFeedback, fetchDishes, fetchPromos, fetchComments, fetchLeaders } from \"../redux/ActionCreators\";\r\nimport { actions } from \"react-redux-form\";\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\";\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\r\n        postFeedback: (firstname, lastname, telnum, email, agree, contactType, message) =>\r\n            dispatch(postFeedback(firstname, lastname, telnum, email, agree, contactType, message)),\r\n        fetchDishes: () => dispatch(fetchDishes()),\r\n        fetchComments: () => dispatch(fetchComments()),\r\n        fetchPromos: () => dispatch(fetchPromos()),\r\n        fetchLeaders: () => dispatch(fetchLeaders()),\r\n        // actions.reset is imported from react-redux-form which adds necessary action to reset the form\r\n        resetFeedbackForm: () => dispatch(actions.reset(\"feedback\"))\r\n    };\r\n};\r\n\r\n//Gets the state of the application as parameter from redux store,\r\n//Maps the redux store state to props and makes it available to use in this component\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        dishes: state.dishes,\r\n        comments: state.comments,\r\n        promotions: state.promotions,\r\n        leaders: state.leaders\r\n    };\r\n};\r\n\r\n//Create new component Main as a container component\r\nclass Main extends Component {\r\n    // Called just after the component gets mounted into the view of the application\r\n    componentDidMount() {\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    //states defined in redux store becomes available as props instead of state because of mapStateToProps function\r\n    render() {\r\n        // declare HomePage component\r\n        const HomePage = () => {\r\n            return (\r\n                // Pass featured dish, promotion and leader from the gven data\r\n                <Home\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\r\n                    dishesLoading={this.props.dishes.isLoading}\r\n                    dishesErrMes={this.props.dishes.dishesErrMes}\r\n                    promotion={this.props.promotions.promotions.filter((promotion) => promotion.featured)[0]}\r\n                    promosLoading={this.props.promotions.isLoading}\r\n                    promoErrMes={this.props.promotions.errmes}\r\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\r\n                    leadersLoading={this.props.leaders.isLoading}\r\n                    leadersErrMes={this.props.leaders.errmes}\r\n                />\r\n            );\r\n        };\r\n\r\n        // match is one of the three params provided by React router which holds the route and its params info\r\n        const DishWithId = ({ match }) => {\r\n            return (\r\n                // Parse the string dishId to int using parseInt\r\n                <DishDetail\r\n                    dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId, 10))[0]}\r\n                    isLoading={this.props.dishes.isLoading}\r\n                    errMes={this.props.dishes.dishesErrMes}\r\n                    comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId, 10))}\r\n                    commentsErrMes={this.props.comments.errmes}\r\n                    postComment={this.props.postComment}\r\n                />\r\n            );\r\n        };\r\n\r\n        return (\r\n            <div>\r\n                <Header />\r\n\r\n                <TransitionGroup>\r\n                    <CSSTransition key={this.props.location.key} classNames='page' timeout={300}>\r\n                        {/* Switch the components bases on the routes defined */}\r\n                        <Switch>\r\n                            {/* Render the home component if route matches to /home */}\r\n                            <Route path='/home' component={HomePage} />\r\n\r\n                            {/* Render the menu component if route exactly matches to /menu */}\r\n                            {/* To pass props with the component, needs to be defined like below */}\r\n                            <Route exact path='/menu' component={() => <Menu dishes={this.props.dishes} />} />\r\n                            <Route path='/menu/:dishId' component={DishWithId} />\r\n                            <Route\r\n                                exact\r\n                                path='/contactus'\r\n                                component={() => <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />}\r\n                            />\r\n                            <Route exact path='/aboutus' component={() => <About leaders={this.props.leaders} />} />\r\n\r\n                            {/* Use redirect to specify a default route if routes does not match any above routes */}\r\n                            <Redirect to='/home' />\r\n                        </Switch>\r\n                    </CSSTransition>\r\n                </TransitionGroup>\r\n\r\n                <Footer />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//Connect Main component to redux store by wrapping Main inside a connect function from react-redux\r\n//Surround the connect function with withRouter from react-router to make use of react router\r\nexport default withRouter(\r\n    connect(\r\n        mapStateToProps,\r\n        mapDispatchToProps\r\n    )(Main)\r\n);\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\n//Configure according to different action types\r\nexport const Dishes = (state = { isLoading: true, errmes: null, dishes: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_DISHES:\r\n            return { ...state, isLoading: false, errmes: null, dishes: action.payload };\r\n\r\n        case ActionTypes.DISHES_LOADING:\r\n            // Take the current value of state, modify the state and return it\r\n            return { ...state, isLoading: true, errmes: null, dishes: [] };\r\n\r\n        case ActionTypes.DISHES_FAILED:\r\n            return { ...state, isLoading: false, errmes: action.payload, dishes: [] };\r\n\r\n        // Return dishes withour modifying anything\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Comments = (state = { errmes: null, comments: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_COMMENTS:\r\n            // Take the current value of state, modify the state and return it\r\n            return { ...state, isLoading: false, errmes: null, comments: action.payload };\r\n\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return { ...state, isLoading: false, errmes: action.payload, comments: [] };\r\n\r\n        case ActionTypes.ADD_COMMENT:\r\n            var comment = action.payload;\r\n\r\n            //Can not modify the state sent as parameter, so concat (immutable operation)\r\n            return { ...state, comments: state.comments.concat(comment) };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Promotions = (state = { isLoading: true, errmes: null, promotions: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n            return { ...state, isLoading: false, errmes: null, promotions: action.payload };\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            // Take the current value of state, modify the state and return it\r\n            return { ...state, isLoading: true, errmes: null, promotions: [] };\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return { ...state, isLoading: false, errmes: action.payload, promotions: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nexport const Leaders = (state = { isLoading: true, errmes: null, leaders: [] }, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_LEADERS:\r\n            return { ...state, isLoading: false, errmes: null, leaders: action.payload };\r\n\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return { ...state, isLoading: true, errmes: null, leaders: [] };\r\n\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return { ...state, isLoading: false, errmes: action.payload, leaders: [] };\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n","export const InitialFeedback = {\r\n    firstname: \"\",\r\n    lastname: \"\",\r\n    telnum: \"\",\r\n    agree: false,\r\n    contactType: \"Phone\",\r\n    message: \"\"\r\n};\r\n","import React, { Component } from \"react\";\nimport Main from \"./components/MainComponent\";\nimport \"./App.css\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport { ConfigureStore } from \"./redux/configureStore\";\n\n//Configure application to use redux, make redux store available to use here\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            // Provider makes react store available to all the components\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div>\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware } from \"redux\";\r\nimport { createForms } from \"react-redux-form\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport { Dishes } from \"./dishes\";\r\nimport { Comments } from \"./comments\";\r\nimport { Promotions } from \"./promotions\";\r\nimport { Leaders } from \"./leaders\";\r\nimport { InitialFeedback } from \"./forms\";\r\n\r\nexport const ConfigureStore = () => {\r\n    //Create a store with redux createStore function\r\n    //CreateStore takes enhancer as second parameter which here is applyMiddleware()\r\n    const store = createStore(\r\n        //Combine the reducers received from multiple files into a single reducer\r\n        combineReducers({\r\n            dishes: Dishes,\r\n            comments: Comments,\r\n            promotions: Promotions,\r\n            leaders: Leaders,\r\n            // Adds necessary reducer function and state information into createStore,\r\n            // react-redux-form adds reducers, action creators etc by itself\r\n            ...createForms({\r\n                // InitialFeedback is supplied to reset the initial state of form after submitting\r\n                feedback: InitialFeedback\r\n            })\r\n        }),\r\n        // applyMiddleware() makes thunk and logger available within the application\r\n        applyMiddleware(thunk, logger)\r\n    );\r\n\r\n    return store;\r\n};\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n//import { from } from 'rxjs';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}